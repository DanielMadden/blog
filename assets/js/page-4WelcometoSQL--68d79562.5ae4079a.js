(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{484:function(e,a,t){"use strict";t.r(a);var n=t(2),s=Object(n.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"_4-welcome-to-sql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-welcome-to-sql"}},[e._v("#")]),e._v(" 4: Welcome to SQL")]),e._v(" "),t("h2",{attrs:{id:"prompts"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prompts"}},[e._v("#")]),e._v(" Prompts")]),e._v(" "),t("h3",{attrs:{id:"in-a-sql-table-what-is-the-difference-between-information-in-a-row-and-information-in-a-column"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#in-a-sql-table-what-is-the-difference-between-information-in-a-row-and-information-in-a-column"}},[e._v("#")]),e._v(" "),t("em",[e._v("In a SQL table, what is the difference between information in a row and information in a column?")])]),e._v(" "),t("br"),e._v(" "),t("p",[e._v('Information in a row all represent a single "object" or "insert." Each row has the same type of values, represented by each column. For example, I can have three columns: name, age, and description. I can also have two rows, both of which will have a name, age, and description (i.e. "Johnny", 5, "He\'s the boy" and "Billy", 10, "Bob Joe").\n'),t("br")]),t("hr"),t("br"),t("p"),e._v(" "),t("h3",{attrs:{id:"demonstrate-the-basic-structure-for-creating-a-new-table-called-characters-with-the-values-name-age-description-as-strings-and-an-int-id"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#demonstrate-the-basic-structure-for-creating-a-new-table-called-characters-with-the-values-name-age-description-as-strings-and-an-int-id"}},[e._v("#")]),e._v(" "),t("em",[e._v("Demonstrate the basic structure for creating a new table called characters with the values name, age, description as strings, and an int id")])]),e._v(" "),t("br"),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("CREATE TABLE characters\n(\n  id INT AUTO_INCREMENT,\n  name VARCHAR(255),\n  age VARCHAR(255),\n  description VARCHAR(255),\n\n  PRIMARY KEY(id)\n)\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br")])]),t("p",[t("br")]),t("hr"),t("br"),t("p"),e._v(" "),t("h3",{attrs:{id:"what-is-the-difference-between-the-following-statements"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#what-is-the-difference-between-the-following-statements"}},[e._v("#")]),e._v(" "),t("em",[e._v("What is the difference between the following statements")])]),e._v(" "),t("br"),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("DELETE FROM table_name;\nDROP TABLE table_name;\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("DELETE FROM deletes the values INSIDE the table, while DROP TABLE deletes the table and everything within it\n"),t("br")]),t("hr"),t("br"),t("p")])}),[],!1,null,null,null);a.default=s.exports}}]);